# This is a basic workflow to help you get started with Actions

name: Sync k8s.gcr.io/kube-scheduler

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/kube-scheduler.yml'
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/kube-scheduler.yml'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  sync:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Install image-syncer
        run: |
          wget https://github.com/AliyunContainerService/image-syncer/releases/download/v1.3.1/image-syncer-v1.3.1-linux-amd64.tar.gz
          tar -zxvf image-syncer-v1.3.1-linux-amd64.tar.gz

      - name: Gen auth.json
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo {\"registry.hub.docker.com\": {\"username\": \"cnplat\", \"password\": \"$DOCKER_PASSWORD\" } } >  auth.json
          echo {\"k8s.gcr.io/kube-scheduler:v1.21.10,v1.22.7,v1.23.4\": \"cnplat/kube-scheduler\" } >  images-kube-scheduler.json

      - name: Run image-syncer
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          ./image-syncer --proc=24 --auth=./auth.json --images=./images-kube-scheduler.json --namespace=cnplat
